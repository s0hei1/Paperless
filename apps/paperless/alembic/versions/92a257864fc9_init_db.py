"""init db

Revision ID: 92a257864fc9
Revises: 
Create Date: 2025-08-21 09:52:26.213667

"""
from typing import Sequence, Union
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '92a257864fc9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('code', sa.Integer(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['manager_id'], ['users.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=32), nullable=False),
    sa.Column('last_name', sa.String(length=32), nullable=False),
    sa.Column('user_name', sa.String(length=32), nullable=False),
    sa.Column('password', sa.String(length=32), nullable=False),
    sa.Column('user_roll', sa.Enum('PERSONNEL', 'SUPERVISOR', 'DEPARTMENT_MANAGER', 'FULL_MANAGER', 'SUPER_ADMINISTRATOR', name='userroll'), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_name')
    )
    op.create_table('goods_exit_docs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doc_code', sa.String(length=8), nullable=False),
    sa.Column('creation_date_time', sa.DateTime(), nullable=False),
    sa.Column('sending_department_id', sa.Integer(), nullable=False),
    sa.Column('sending_department_name', sa.String(length=128), nullable=False),
    sa.Column('exit_reason', sa.String(), nullable=False),
    sa.Column('destination', sa.String(length=128), nullable=False),
    sa.Column('address_', sa.String(length=512), nullable=False),
    sa.Column('sending_user_fullname', sa.String(length=128), nullable=False),
    sa.Column('exit_for_ever', sa.Boolean(), nullable=False),
    sa.Column('receiver_name', sa.String(length=128), nullable=True),
    sa.Column('status', sa.Enum('Approved', 'Rejected', 'Pending', name='approvalstatus'), nullable=False),
    sa.Column('approval_status', sa.Enum('Approved', 'Rejected', 'Pending', name='approvalstatus'), nullable=False),
    sa.Column('creator_user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['creator_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sending_department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('doc_code')
    )
    op.create_table('approvals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('Approved', 'Rejected', 'Pending', name='approvalstatus'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('doc_id', sa.Integer(), nullable=False),
    sa.Column('modification_date_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['doc_id'], ['goods_exit_docs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('goods_exits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('sap_code', sa.String(length=16), nullable=True),
    sa.Column('count', sa.Integer(), nullable=False),
    sa.Column('unit_of_measure', sa.Enum('QTY', 'METER', 'LITER', 'COUPLE', name='uoms'), nullable=False),
    sa.Column('goods_exit_doc_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['goods_exit_doc_id'], ['goods_exit_docs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('goods_exits')
    op.drop_table('approvals')
    op.drop_table('goods_exit_docs')
    op.drop_table('users')
    op.drop_table('departments')
    # ### end Alembic commands ###

